name: Merge CSS Files

on:
  repository_dispatch:
    types: [css-updated]
  schedule:
    - cron: '0 0,6,12,18 * * *'  # Runs at midnight, 06:00, 12:00, and 18:00 UTC
  push:
    paths:
      - merge/config/**/*.yml
  workflow_dispatch:  # Manual trigger

jobs:
  merge-css:
    runs-on: ubuntu-latest
    if: github.event_name != 'push' || (github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip ci]'))

    steps:
      - name: Checkout repository with PAT
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          npm init -y
          npm install js-yaml node-fetch@2

      - name: Merge CSS files
        env:
          DRY_RUN: ${{ github.event.inputs.dry_run || 'false' }}
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          HIDE_COMMENTS: 'true'
        run: node merge/merge-css.js

      - name: Set remote URL with PAT
        run: |
          git remote set-url origin https://github.com/anebix-world/discord-css-merge-test.git
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Commit merged CSS files if changed
        run: |
          # Loop over each config file in merge/config to extract output files
          for cfg in $(find merge/config -type f -name '*.yml'); do
            output_file=$(grep '^[[:space:]]*output:' "$cfg" | head -n 1 | sed 's/.*output:[[:space:]]*//')
            if [ -z "$output_file" ]; then
              output_file="combined.css"
            fi
            # If output_file is absolute, convert it relative to repo root
            if [[ "$output_file" == /* ]]; then
              output_file="$(pwd)/${output_file:1}"
            else
              output_file="$(pwd)/$output_file"
            fi
            echo "Adding output file: $output_file"
            mkdir -p "$(dirname "$output_file")"
            # Force-add the file (in case it is in .gitignore)
            git add -f "$output_file"
          done

          # If any output file has changes staged, commit and push.
          if ! git diff --cached --quiet; then
            git commit -m "Update merged CSS files [skip ci]"
            git pull --rebase origin main
            git push origin main
          else
            echo "No changes detected in merged CSS files."
          fi
