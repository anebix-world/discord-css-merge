name: Merge CSS Files

on:
  repository_dispatch:
    types: [css-updated]
  schedule:
    - cron: '0 0,6,12,18 * * *'  # Runs at midnight, 06:00, 12:00, and 18:00 UTC
  push:
    paths:
      - merge/css_manifest.yml

jobs:
  merge-css:
    runs-on: ubuntu-latest
    if: github.event_name != 'push' || (github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip ci]'))

    steps:
      - name: Checkout repository with PAT
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: |
          npm init -y
          npm install js-yaml node-fetch@2

      - name: Merge CSS files
        env:
          DRY_RUN: ${{ github.event.inputs.dry_run || 'false' }}
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          HIDE_COMMENTS: 'true'
        run: node merge/merge-css.js

      - name: Set remote URL with PAT
        run: |
          git remote set-url origin https://github.com/anebix-world/discord-css-merge.git
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Commit merged CSS file if changed
        run: |
          # Extract output file from manifest (/merge/css_manifest.yml)
          output_file=$(grep '^[[:space:]]*output:' merge/css_manifest.yml | head -n 1 | sed 's/.*output:[[:space:]]*//')
          if [ -z "$output_file" ]; then
            output_file="combined.css"
          fi

          # If output_file is absolute (starts with '/'), convert it relative to the repo root
          if [[ "$output_file" == /* ]]; then
             # Remove the leading slash and prepend current working directory
             output_file="$(pwd)/${output_file:1}"
          fi

          echo "Using output file: $output_file"

          # Ensure the directory exists and create the file if it doesn't exist
          if [ ! -f "$output_file" ]; then
            echo "$output_file not found, creating an empty file."
            mkdir -p "$(dirname "$output_file")"
            touch "$output_file"
          fi

          # Check if there are changes to commit for the output file only
          if ! git diff --quiet "$output_file"; then
            git add "$output_file"
            git commit -m "Update combined CSS [skip ci]"
            git pull --rebase origin main
            git push origin main
          else
            echo "No changes detected in $output_file."
          fi
